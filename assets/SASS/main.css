@charset "UTF-8";
/* Imports */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Anim Frames */
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes scale {
  0% {
    font-weight: 100;
  }
  100% {
    font-weight: 1000;
  }
}
/* Anim Set */
.fadeIn {
  animation-name: fadeIn;
  animation-duration: 2s;
}

.fadeOut {
  animation-name: fadeOut;
  animation-duration: 2s;
}

/* @font-face {
  font-family: Nunito;
  src: url('aafonts/EntezareZohoor2.eot');
  src: url('fonts/EntezareZohoor2.eot?') format('â˜º'),
       url('fonts/EntezareZohoor2.woff') format('woff'),
       url('fonts/EntezareZohoor2.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
} */
.scanlines {
  overflow: hidden;
  position: relative;
}

.scanlines:before,
.scanlines:after {
  display: block;
  pointer-events: none;
  content: "";
  position: absolute;
}

.scanlines:before {
  width: 100%;
  height: 2px;
  z-index: 2147483649;
  background: rgba(0, 0, 0, 0.3);
  opacity: 0.75;
  animation: scanline 6s linear infinite;
}

.scanlines:after {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 2147483648;
  background: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.3) 51%);
  background-size: 100% 4px;
  animation: scanlines 1s steps(60) infinite;
}

/* ANIMATE UNIQUE SCANLINE */
@keyframes scanline {
  0% {
    transform: translate3d(0, 200000%, 0);
  }
}
@keyframes scanlines {
  0% {
    background-position: 0 50%;
  }
}
div {
  margin: 0;
  padding: 0;
}

div.scanlines {
  position: absolute;
}

div .jpg {
  width: 100vw;
  height: 100vh;
  border: none;
}

.jpg {
  background: url("https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Philips_PM5544.svg/800px-Philips_PM5544.svg.png") no-repeat;
  background-size: cover;
}

body {
  position: relative;
  background: #1b1b1b;
}

.g_container {
  display: flex;
  flex-direction: column;
  width: 840px;
  height: 800px;
  gap: 3em;
  position: relative;
  padding: 3em;
  box-sizing: border-box;
  filter: blur(2px);
}

/* text */
h2 {
  font-size: 60px;
  margin: 0;
}

.g_container a {
  font-size: 45px;
  text-decoration: none;
  color: inherit;
  z-index: 5;
}

.g_container a > * {
  display: flex;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.row {
  display: flex;
  flex-direction: row;
  position: relative;
  gap: 2em;
}

.column {
  display: flex;
  flex-direction: column;
  position: relative;
}

.row.one {
  height: 80%;
  width: 100%;
}

.row.two {
  height: 20%;
  width: 100%;
}

.column.one {
  width: 40%;
}

.column.two {
  width: 60%;
}

.glitch {
  text-transform: uppercase;
  justify-content: space-evenly;
  height: 0px;
  width: 0px;
  display: none;
}

.text.gRed {
  color: rgb(255, 0, 0);
}

.text.gGreen {
  color: rgb(0, 255, 0);
}

.text.gBlue {
  color: rgb(0, 0, 255);
}

.gRed {
  position: absolute;
  mix-blend-mode: screen;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  justify-content: space-between;
  box-sizing: border-box;
  animation: 1s infinite;
  transform: translate(4px, 4px);
  animation-name: gRed;
}

.gGreen {
  position: absolute;
  mix-blend-mode: screen;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  justify-content: space-between;
  box-sizing: border-box;
  animation: 1s infinite;
  transform: translate(0, 0);
  animation-name: gGreen;
}

.gBlue {
  position: absolute;
  mix-blend-mode: screen;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  justify-content: space-between;
  box-sizing: border-box;
  animation: 1s infinite;
  transform: translate(-4px, -4px);
  animation-name: gBlue;
}

.rects.gRed,
.rects.gGreen,
.rects.gBlue {
  padding: 0.5em;
}

.rect {
  width: 100%;
  position: relative;
}

.rect.one {
  height: 1%;
}

.rect.two {
  height: 2%;
}

.rect.three {
  height: 4%;
}

.rect.four {
  height: 8%;
}

.rect.five {
  height: 16%;
}

.rect.six {
  height: 32%;
}

.rects.gRed > * {
  background-color: rgb(255, 0, 0);
}

.rects.gGreen > * {
  background-color: rgb(0, 255, 0);
}

.rects.gBlue > * {
  background-color: rgb(0, 0, 255);
}

.border {
  top: 0;
  left: 0;
  pointer-events: none;
}

.border.gRed {
  border: 12px solid;
  border-color: rgb(255, 0, 0);
}

.border.gGreen {
  border: 12px solid;
  border-color: rgb(0, 255, 0);
}

.border.gBlue {
  border: 12px solid;
  border-color: rgb(0, 0, 255);
}

.button {
  width: 100%;
}

.button.gRed {
  color: rgb(255, 0, 0);
  border: 12px solid;
  border-color: rgb(255, 0, 0);
}

.button.gGreen {
  color: rgb(0, 255, 0);
  border: 12px solid;
  border-color: rgb(0, 255, 0);
}

.button.gBlue {
  color: rgb(0, 0, 255);
  border: 12px solid;
  border-color: rgb(0, 0, 255);
}

@keyframes gRed {
  0% {
    transform: translate(4px, 4px);
  }
  15% {
    transform: translate(5px, 6px);
  }
  30% {
    transform: translate(4px, 4px);
  }
  45% {
    transform: translate(5px, 6px);
  }
  60% {
    transform: translate(4px, 4px);
  }
  75% {
    transform: translate(6px, -2px);
  }
  100% {
    transform: translate(4px, 4px);
  }
}
@keyframes gGreen {
  0% {
    transform: translate(0px, 0px);
  }
  15% {
    transform: translate(-1px, -2px);
  }
  30% {
    transform: translate(0px, 0px);
  }
  45% {
    transform: translate(-1px, -2px);
  }
  60% {
    transform: translate(0px, 0px);
  }
  75% {
    transform: translate(-1px, 1px);
  }
  100% {
    transform: translate(0px, 0px);
  }
}
@keyframes gBlue {
  0% {
    transform: translate(-4px, -4px);
  }
  15% {
    transform: translate(-6px, -6px);
  }
  30% {
    transform: translate(-4px, -4px);
  }
  45% {
    transform: translate(0px, 0px);
  }
  60% {
    transform: translate(-4px, -4px);
  }
  75% {
    transform: translate(-3px, -5px);
  }
  100% {
    transform: translate(-4px, -4px);
  }
}
a:hover > .gRed,
.gGreen,
.gBlue {
  animation: 1s;
  transform: translate(0, 0);
}

/* Set */
html {
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}

html::-webkit-scrollbar {
  width: 0px; /* For Chrome, Safari, and Opera */
}

.noselect {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Old versions of Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently
   supported by Chrome, Edge, Opera and Firefox */
}

body {
  font-family: Nunito, Tahoma, serif;
  background-image: url("https://fauux.neocities.org/bg_darker.gif");
  background-color: black;
  background-position: center;
  background-size: 500px;
  color: #fff;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

h1,
h2,
h3,
h4 {
  margin: 0.1rem 0;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 1.5rem;
  padding-left: 20px;
}

h3 {
  font-size: 1.2rem;
  padding-left: 40px;
}

h4 {
  font-size: 1rem;
  font-style: italic;
  padding-left: 60px;
}

sub {
  font-size: 0.5rem;
}

a {
  text-decoration: none;
  color: inherit;
}

.layout {
  width: 100%;
  display: grid;
  grid-template-rows: repeat(3, 30vh);
  grid-template-columns: repeat(3, 30vw);
  gap: 8px;
  justify-content: space-evenly;
  align-content: space-evenly;
  justify-items: center;
  align-items: center;
}

.flex-auto-wrap {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.flex-auto-wrap > * {
  flex: 1; /* this is to make elements/columns in each row have equal width and fill up all available space in the row, similar to auto-fit in grid */
  /* flex-grow: 1; this can be used to make elements/columns in each row maintain their individual width but stretch to fill up all available space in the row */
}

.navigation {
  text-align: center;
}

.center {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.popup {
  background-color: rgba(0, 0, 0, 0.1215686275);
  backdrop-filter: blur(2px);
  border-radius: 20px;
  padding: 20px;
}

.title {
  visibility: hidden;
}

#logo {
  position: sticky;
  align-items: center;
  top: 0;
  width: 40rem;
  image-rendering: optimizeQuality;
  object-fit: fill;
  pointer-events: none;
}/*# sourceMappingURL=main.css.map */